import os
from aiogram import Bot
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from app.bot.infrastructure.handlers.base_handler import BaseHandler
from app.bot.infrastructure.logging.logger import Logger

class HelpHandler(BaseHandler):
    """Handler for help-related operations"""
    
    def __init__(self, bot: Bot, logger: Logger):
        super().__init__(bot, logger)
        
    async def handle_help(self, message: Message):
        """Show help message"""
        help_text = (
            "ü§ñ *–ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏*\n\n"
            "*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
            "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "/create_org - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é\n"
            "/my_orgs - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π\n\n"
            "*–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π:*\n"
            "‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω—é\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏\n"
            "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–æ–≤\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã\n\n"
            "*–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:*\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, "
            "–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏."
        )
        
        await message.answer(help_text, parse_mode="Markdown")
        
    async def handle_help_callback(self, callback_query: CallbackQuery):
        """Handle help callback queries"""
        help_type = callback_query.data.split("_")[1]
        
        help_texts = {
            "menu": (
                "üìã *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é*\n\n"
                "‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω—é —á–µ—Ä–µ–∑ CSV —Ñ–∞–π–ª\n"
                "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω—é\n"
                "‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π\n"
                "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏\n\n"
                "–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–Ω—é' "
                "–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ CSV —Ñ–∞–π–ª –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "–∫–∞—Ç–µ–≥–æ—Ä–∏—è,–Ω–∞–∑–≤–∞–Ω–∏–µ,—Ü–µ–Ω–∞,–æ–ø–∏—Å–∞–Ω–∏–µ"
            ),
            "images": (
                "üì∏ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏*\n\n"
                "‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
                "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≥–∞–ª–µ—Ä–µ–∏\n"
                "‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n\n"
                "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF\n"
                "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB"
            ),
            "qr": (
                "üî≤ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ QR-–∫–æ–¥–∞–º–∏*\n\n"
                "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–æ–≤\n"
                "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–¥–æ–≤\n"
                "‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–¥–æ–≤\n\n"
                "QR-–∫–æ–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–µ–Ω—é"
            ),
            "theme": (
                "üé® *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–æ–π*\n\n"
                "‚Ä¢ –í—ã–±–æ—Ä –≥–æ—Ç–æ–≤–æ–π —Ç–µ–º—ã\n"
                "‚Ä¢ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–º—ã\n"
                "‚Ä¢ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã\n\n"
                "–¢–µ–º–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏"
            )
        }
        
        if help_type in help_texts:
            await callback_query.message.answer(
                help_texts[help_type],
                parse_mode="Markdown"
            )
        else:
            await callback_query.message.answer(
                "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–æ–º–æ—â–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞."
            )
            
    async def handle_contact(self, message: Message):
        """Show contact information"""
        contact_text = (
            "üìû *–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*\n\n"
            "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:\n"
            "‚Ä¢ Email: support@example.com\n"
            "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67\n"
            "‚Ä¢ Telegram: @support_bot\n\n"
            "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n"
            "–ü–Ω-–ü—Ç: 9:00 - 18:00 (–ú–°–ö)"
        )
        
        await message.answer(contact_text, parse_mode="Markdown") 